'
' Library with useful procedures.
' Include this procedures_library.puml file in your main .puml file to use procedures.
' Use following construction in your main .puml file:
' %invoke_procedure("$procedure_name", argument1, ... ) 
'
@startuml procedures_lib

!function req($text)
!return "Request " + $text
!endfunction

!function resp($text)
!return "Response " + $text
!endfunction

!procedure $proxy($text, $actors)
'Procedure takes as input:
  'text -- will be displayed upon each arrow
  'actors -- string in "", where strictly COMMA delimited actors must follow in desired order
!$string = $actors              
'input string of actors.
!$len = %strlen($string)        
'first input string length constant
!$pos = %strpos($string, ",")   
'returns position of symbol in argument. Starts from 0.
!$start = 0                     
'defines parsing start position
!$i=$len                        
'iteration starts with input string length
!$j = 0
  !while $pos >= 0
    !$j = $j + 1
    !$source = $res
      !if $j == 1
        !$source = $res
      !endif
    !$res = %substr($string, $start, $pos)
    !$dest = $res
      !if $j > 1
    $source -> $dest: $text
      !endif 
    !$string = %substr($string, $pos+1, $len - $pos)
    !$i=%strlen($string)
    !$pos = %strpos($string, ",") 
  !endwhile
!$j = $j + 1
!$source = $res
!$res = $string
!$dest = $res
$source -> $dest: $text
!endprocedure

!procedure $proxy_response($text, $actors)
'Procedure takes as input:
  'text -- will be displayed upon each arrow
  'actors -- string in "", where strictly COMMA delimited actors must follow in desired order
!$string = $actors              
'input string of actors.
!$len = %strlen($string)        
'first input string length constant
!$pos = %strpos($string, ",")   
'returns position of symbol in argument. Starts from 0.
!$start = 0                     
'defines parsing start position
!$i=$len                        
'iteration starts with input string length
!$j = 0
  !while $pos >= 0
    !$j = $j + 1
    !$source = $res
      !if $j == 1
        !$source = $res
      !endif
    !$res = %substr($string, $start, $pos)
    !$dest = $res
      !if $j > 1
    $source --> $dest: $text
      !endif 
    !$string = %substr($string, $pos+1, $len - $pos)
    !$i=%strlen($string)
    !$pos = %strpos($string, ",") 
  !endwhile
!$j = $j + 1
!$source = $res
!$res = $string
!$dest = $res
$source --> $dest: $text
!endprocedure

@enduml